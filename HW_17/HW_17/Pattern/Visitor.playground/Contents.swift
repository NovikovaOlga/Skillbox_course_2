// MARK: - Visitor

//–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å ‚Äî —ç—Ç–æ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–µ –∏–∑–º–µ–Ω—è—è –∫–ª–∞—Å—Å—ã –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è.

// –ü—Ä–∏–º–µ—Ä: –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –æ–≤–æ—â–µ–π –Ω–∞ –≥—Ä—è–¥–∫–∞—Ö

// –æ–≤–æ—â–∏
class Vegetable {
  var name: String // –æ–≤–æ—â
  var ripe: Bool // —Å–æ–∑—Ä–µ–ª–∞
  var quantity: Int // –∫–æ–ª–∏—á—Å—Ç–≤–æ

  init(name: String, ripe: Bool, quantity: Int) {
    self.name = name
    self.ripe = ripe
    self.quantity = quantity
  }
}

// –≥—Ä—è–¥–∫–∞
class VegetableBed {
    lazy var vegetables: [Vegetable] = []
    
    func addVegetable(anVegetable: Vegetable) {
        vegetables.append(anVegetable)
    }
    
    func touch(visitor: BasicVisitor) {
        visitor.visit(anObject: self)
        
        for vegetable in vegetables {
            visitor.visit(anObject: vegetable)
        }
    }
}

// –ø—Ä–æ—Ç–æ–∫–æ–ª –≤–∏–∑–∏—Ç–æ—Ä–æ–≤
protocol BasicVisitor {
    func visit(anObject: AnyObject)
}

// –≤–∏–∑–∏—Ç–æ—Ä: –∑—Ä–µ–ª–æ—Å—Ç—å
class RipeVisitor: BasicVisitor {
    func visit(anObject: AnyObject) {
        
        if let obj = anObject as? Vegetable {
            if obj.ripe {
                print("–ì—Ä—è–¥–∫–∞: \(obj.name) - —Å–æ–∑—Ä–µ–ª")
            } else {
                print("–ì—Ä—è–¥–∫–∞: \(obj.name) - –Ω–µ —Å–æ–∑—Ä–µ–ª")
            }
        }
        
        if let _ = anObject as? VegetableBed {
            print("–°—Ç–µ–ø–µ–Ω—å –∑—Ä–µ–ª–æ—Å—Ç–∏ –æ–≤–æ—â–µ–π: ")
        }
    }
}

// –≤–∏–∑–∏—Ç–æ—Ä: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –≥—Ä—è–¥–∫–∞—Ö
class QuantityVisitor: BasicVisitor {
    func visit(anObject: AnyObject) {
        if let obj = anObject as? Vegetable {
            print("–û–≤–æ—â: \(obj.name), —à—Ç: \(obj.quantity)")
        }
        
        if let _ = anObject as? VegetableBed {
            print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–≤–æ—â–µ–π:")
        }
    }
}

let vegetableBed = VegetableBed()

vegetableBed.addVegetable(anVegetable: Vegetable(name: "–¢—ã–∫–≤—ã", ripe: true, quantity: 22))
vegetableBed.addVegetable(anVegetable:  Vegetable(name: "–û–≥—É—Ä—Ü—ã", ripe: true, quantity: 58))
vegetableBed.addVegetable(anVegetable:  Vegetable(name: "–ë–∞–∫–ª–∞–∂–∞–Ω—ã", ripe: false, quantity: 15))
vegetableBed.addVegetable(anVegetable:  Vegetable(name: "–ú–æ—Ä–∫–æ–≤—å", ripe: false, quantity: 70))
vegetableBed.addVegetable(anVegetable:  Vegetable(name: "–ö–∞–ø—É—Å—Ç–∞", ripe: true, quantity: 45))


let quantityVisitor = QuantityVisitor()
let ripeVisitor = RipeVisitor()

print("ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ")
vegetableBed.touch(visitor: quantityVisitor)
print("ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ü•¨ ")
vegetableBed.touch(visitor: ripeVisitor)
